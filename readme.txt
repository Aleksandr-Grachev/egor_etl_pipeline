AirFlow НАСТРОЙКА

______________________________________
Admin -> Connections:

Connection Id: postgres-db
Connection Type: postgres
Host: host.docker.internal
Database: своё название БД (postgres)
Login: Пользователь (postgres)
Port: 5432
______________________________________
Admin -> Variables:

Key: my_path
Val: /files/
______________________________________

1TASK!!!

1.1 Задание (1_task)
В данном задании выполняется ETL процесс по загрузке и обработке данных
Scripts - источники сырых данных csv
- в файле sql содержатся sql скрипты для перегрузки и обработки сырых данных из схемы "stage"(сырые) 
в схему "DS"(обработанные данные)
ФАЙЛЫ: ft_balance_f.sql, ft_posting_f.sql, md_account_d.sql, md_currency_d.sql, md_exchange_rate_d.sql, md_ledger_account_s.sql

- так же в файле sql содержатся скрипты для создания таблиц в схеме "DS"(sql_create_table.sql) 
"LOGS"(1log_table.sql), очистки таблиц ветки "stage" для избежания дублирования данных(sql_trunc_stage.sql),
Выборки таблиц для проверки работы скриптов (ЗАПРОСЫ.sql)

Task_ETL - разные варианты выполнения ETL потока(ознакомиться с описанием можно в description.txt)

Video.txt - Ссылка на видео с демонстрацией работы 1 варианта

_______________________________________________________________________

1.2 ЗАДАНИЕ (2_task)
В данном задании выполняется заполнение витрины оборотов и витрины остатков.
Procedures - создание 2 витрин, а так же sql скрипты заполнения 2 витрин и заполнения витрины остатков за 31.12 число.
description - описание процедур.
Video.txt - Ссылка на видео с демонстрацией работы.

ПОРЯДОК ВЫПОЛНЕНИЯ СКРИПТОВ: 
1) "createshowcases.sql"
2) "витрина оботоров.sql"
3) "Заполнение витрины остатков за 31.12.sql"
4) "Витрина остатков.sql"

_______________________________________________________________________

1.3 ЗАДАНИЕ (3_task)
В данном задании выполняется заполнение 101 формы на основе уже 2 имеющихся витрин остатков и оборотов.
Procedures - создание 101 формы, а так же sql скрипт заполнения 101 формы.

Video.txt - Ссылка на видео с демонстрацией и объяснением кода скрипта.

ПОРЯДОК ВЫПОЛНЕНИЯ СКРИПТОВ: 
1) "create101f.sql"
2) "101_form.sql"
_______________________________________________________________________

1.4 ЗАДАНИЕ (4_task)
В данном задании выполняется экспорт и импорт 101 формы
export_import.py - python скрипт который может выполнять как экспорт так и импорт 101 формы
description - общее описание скрипта.
Video.txt - Ссылка на видео с демонстрацией и объяснением кода скрипта.

_______________________________________________________________________



2TASK!!!

2.1 ЗАДАНИЕ (2.1_task)
В данном задании выполняется удаление дубликатов из таблицы dm.client
delete_dublicate.sql - скрипт нахождения дубликатов и их удаление без оригинальных записей
description.txt - Описание скрипта

_______________________________________________________________________

2.2 ЗАДАНИЕ (2.2_task)
В данном задании нужно добавить в таблицы схемы 'rd' информацию из csv которой нет в самих таблицах и перегрузить снова информацию в витрину 'LOAN_HOLIDAY_INFO'
sources - Источники откуда берутся данные в таблице и csv
analytics_select.sql - Аналитические запросы, которые помогают понять какие данные уже есть в слое 'rd', а какие нужно добавить из csv
import_rd.py - py скрипт который импортирует данные из csv в слой 'rd'
reload_data.sql - sql скрипт который перегружает данные из слоя 'rd' в витрину 'LOAN_HOLIDAY_INFO'
description - Описание задачи и подхода к задаче

ПОРЯДОК ВЫПОЛНЕНИЯ СКРИПТОВ:
1) DATABASE_DUMP.sql
2) import_rd.py
3) reload_data.sql
